@isTest
public class calc_EM_14833Test {

    static testmethod void test(){
        
        Measure__c Measureobj=new Measure__c(Measure_Name__c='TestMeasure');
        insert Measureobj;
        
        Program__c probj=new Program__c(name='TestProgram',GL_String__c='Test',Application_Record_Type__c='Custom');
        insert Probj;
        
        Eligible_Measure__c ElMObj=new Eligible_Measure__c(Measure__c=MeasureObj.id,Program__c=probj.id);
        insert ElMObj;
        
        Qualified_Product_List_Master__c qplMaster = new Qualified_Product_List_Master__c ();
        insert qplMaster;
        
        //Name = 'qpl-101',
        Qualified_Product_List__c qpl = new Qualified_Product_List__c();
        qpl.Qualified_Product_List_Master__c = qplMaster.id;
        qpl.Units_Per_Pack__c = 2;
        qpl.SKU_Incentive__c  = 12.20;
        insert qpl;
        
        Participation_Data__c pD = new Participation_Data__c(Qualified_Product_List__c = qpl.id);
        insert pD;
        
        //insert EA
        Enrollment_Application__c EAObj=new Enrollment_Application__c(Applicant_Email_Address__c='Test@gmail.com',Program__c=probj.id, Participation_Data__c = pD.id, Enrollment_Channel__c = 'Upstream');
        insert EAobj;
        
        dsmtApproved_MLI_Stages__c appCstmSetting = new dsmtApproved_MLI_Stages__c(name='Acquired');
        insert appCstmSetting;
        
        // Insert Measure Line Item Record to fire Trigger
        Measure_Line_Item__c measureItem = new Measure_Line_Item__c(Eligible_Measure__c=ElmObj.id,Enrollment_Application__c=EAObj.id);
        measureItem.Bulb_Fixture__c = '3-Way';
        measureItem.EISA_Exempt__c = 'EISA Exempt';
        measureItem.Start_Date__c =  Date.newInstance(2020,01,01);
        measureItem.Purchase_Date__c = Date.newInstance(2018,01,01);
        measureItem.Rated_Lumen_Output__c = 250;
        measureItem.Incentive_Per_Package__c = 12;
        measureItem.Efficient_Tank_Size_Gallons__c = 250;
        measureItem.Efficient_Energy_Factor__c = 2;
        measureItem.Package_Quantity__c = 2;
        measureItem.Units_Per_Package__c = 1;
        measureItem.Efficient_Lamp_Wattage__c = 0.2;
        measureItem.Sale_Date__c = Date.newInstance(2017,01,01);
        Insert measureItem;
        
        calc_EM_14833 c1 = new calc_EM_14833(measureItem);
        c1.populateValues();    
        
        calc_EM_28194 c28194 = new calc_EM_28194(measureItem);
        c28194.populateValues();    
        
        calc_EM_28193 c28193 = new calc_EM_28193(measureItem);
        c28193.populateValues();    

        List<String> bulbFixList = new List<String>{'3-Way','Globe - Medium Base','Globe - Candelabra Base','BR30','Decorative - Medium Base','R - Diameter ≤ 2.25"','Decorative - Candelabra Base','ER30','R20','R - Diameter > 2.25"'};
        List<Date> dateList = new List<Date> {Date.newInstance(2017,12,01),Date.newInstance(2018,02,01),Date.newInstance(2017,12,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2017,12,01),Date.newInstance(2017,12,01),Date.newInstance(2017,12,01)};
        List< Decimal> ratedLumen = new List<Decimal> {89,149,249,349,499,1049,1599,1999,2549,2999,3000};

        calc_EM_14833 c2;
        for(Decimal r : ratedLumen) {
            
            measureItem.Rated_Lumen_Output__c = r ;
            measureItem.EISA_Exempt__c = 'EISA Exempt';
            for(Integer index = 0;index < bulbFixList.size(); index++) {
                measureItem.Bulb_Fixture__c = bulbFixList[index];
                measureItem.Start_Date__c = dateList[index];
                c2 = new calc_EM_14833(measureItem);
                c2.populateValues();     
            }
                
        }
        
        List< Decimal> ratedLumen1= new List<Decimal> {1049,1489,2600};
        measureItem.EISA_Exempt__c = 'EISA Non-Exempt';
        measureItem.Bulb_Fixture__c = 'Globe - Medium Base';
        for(Decimal r: ratedLumen1){
            measureItem.Rated_Lumen_Output__c = r;
            c2 = new calc_EM_14833(measureItem);
            c2.populateValues();
        }
        
        measureItem.Bulb_Fixture__c = 'Globe - Candelabra Base';
        for(Decimal r: ratedLumen1){
            measureItem.Rated_Lumen_Output__c = r;
            c2 = new calc_EM_14833(measureItem);
            c2.populateValues();
        }
        
        EAobj.Enrollment_Channel__c = 'Online';
        update EAobj;

        
        measureItem.Bulb_Fixture__c = 'Decorative - Candelabra Base';
        measureItem.Rated_Lumen_Output__c = 750;
        calc_EM_14833 c7 = new calc_EM_14833(measureItem);

        c7.populateValues();
    }
    
    static testmethod void test3(){
        
        Measure__c Measureobj=new Measure__c(Measure_Name__c='TestMeasure');
        insert Measureobj;
        
        Program__c probj=new Program__c(name='TestProgram',GL_String__c='Test',Application_Record_Type__c='Custom');
        insert Probj;
        
        Eligible_Measure__c ElMObj=new Eligible_Measure__c(Measure__c=MeasureObj.id,Program__c=probj.id);
        insert ElMObj;
        
        Qualified_Product_List_Master__c qplMaster = new Qualified_Product_List_Master__c ();
        insert qplMaster;
        
        //Name = 'qpl-101',
        Qualified_Product_List__c qpl = new Qualified_Product_List__c();
        qpl.Qualified_Product_List_Master__c = qplMaster.id;
        qpl.Units_Per_Pack__c = 2;
        qpl.SKU_Incentive__c  = 12.20;
        insert qpl;
        
        Participation_Data__c pD = new Participation_Data__c(Qualified_Product_List__c = qpl.id);
        insert pD;
        
        //insert EA
        Enrollment_Application__c EAObj=new Enrollment_Application__c(Applicant_Email_Address__c='Test@gmail.com',Program__c=probj.id, Participation_Data__c = pD.id, Enrollment_Channel__c = 'Upstream');
        insert EAobj;
        
        dsmtApproved_MLI_Stages__c appCstmSetting = new dsmtApproved_MLI_Stages__c(name='Acquired');
        insert appCstmSetting;
        
        // Insert Measure Line Item Record to fire Trigger
        Measure_Line_Item__c measureItem = new Measure_Line_Item__c(Eligible_Measure__c=ElmObj.id,Enrollment_Application__c=EAObj.id);
        measureItem.Bulb_Fixture__c = '3-Way';
        measureItem.EISA_Exempt__c = 'EISA Exempt';
        measureItem.Start_Date__c =  Date.newInstance(2020,01,01);
        measureItem.Purchase_Date__c = Date.newInstance(2018,01,01);
        measureItem.Rated_Lumen_Output__c = 250;
        measureItem.Incentive_Per_Package__c = 12;
        measureItem.Efficient_Tank_Size_Gallons__c = 250;
        measureItem.Efficient_Energy_Factor__c = 2;
        measureItem.Package_Quantity__c = 2;
        measureItem.Units_Per_Package__c = 1;
        measureItem.Efficient_Lamp_Wattage__c = 0.2;
        measureItem.Sale_Date__c = Date.newInstance(2020,12,18);

        Insert measureItem;
        
        calc_EM_14833 c1 = new calc_EM_14833(measureItem);
        c1.populateValues();    
        
        calc_EM_28194 c28194 = new calc_EM_28194(measureItem);
        c28194.populateValues();    
        
        calc_EM_28193 c28193 = new calc_EM_28193(measureItem);
        c28193.populateValues();    

        List<String> bulbFixList = new List<String>{'3-Way','Globe - Medium Base','Globe - Candelabra Base','BR30','Decorative - Medium Base','R - Diameter ≤ 2.25"','Decorative - Candelabra Base','ER30','R20','R - Diameter > 2.25"'};
        List<Date> dateList = new List<Date> {Date.newInstance(2017,12,01),Date.newInstance(2018,02,01),Date.newInstance(2017,12,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2017,12,01),Date.newInstance(2017,12,01),Date.newInstance(2017,12,01)};
        List< Decimal> ratedLumen = new List<Decimal> {89,149,249,349,499,1049,1599,1999,2549,2999,3000};

        calc_EM_14833 c2;
        for(Decimal r : ratedLumen) {
            
            measureItem.Rated_Lumen_Output__c = r ;
            measureItem.EISA_Exempt__c = 'EISA Exempt';
            for(Integer index = 0;index < bulbFixList.size(); index++) {
                measureItem.Bulb_Fixture__c = bulbFixList[index];
                measureItem.Start_Date__c = dateList[index];
                c2 = new calc_EM_14833(measureItem);
                c2.populateValues();     
            }
                
        }
        
        List< Decimal> ratedLumen1= new List<Decimal> {1049,1489,2600};
        measureItem.EISA_Exempt__c = 'EISA Non-Exempt';
        measureItem.Bulb_Fixture__c = 'Globe - Medium Base';
        for(Decimal r: ratedLumen1){
            measureItem.Rated_Lumen_Output__c = r;
            c2 = new calc_EM_14833(measureItem);
            c2.populateValues();
        }
        
        measureItem.Bulb_Fixture__c = 'Globe - Candelabra Base';
        for(Decimal r: ratedLumen1){
            measureItem.Rated_Lumen_Output__c = r;
            c2 = new calc_EM_14833(measureItem);
            c2.populateValues();
        }
        
        EAobj.Enrollment_Channel__c = 'Online';
        update EAobj;

        
        measureItem.Bulb_Fixture__c = 'Decorative - Candelabra Base';
        measureItem.Rated_Lumen_Output__c = 750;
        calc_EM_14833 c7 = new calc_EM_14833(measureItem);

        c7.populateValues();
    }
    
    static testmethod void test2(){
        
        Measure__c Measureobj=new Measure__c(Measure_Name__c='TestMeasure');
        insert Measureobj;
        
        Program__c probj=new Program__c(name='TestProgram',GL_String__c='Test',Application_Record_Type__c='Custom');
        insert Probj;
        
        Eligible_Measure__c ElMObj=new Eligible_Measure__c(Measure__c=MeasureObj.id,Program__c=probj.id);
        insert ElMObj;
        
        Qualified_Product_List_Master__c qplMaster = new Qualified_Product_List_Master__c ();
        insert qplMaster;
        
        //Name = 'qpl-101',
        Qualified_Product_List__c qpl = new Qualified_Product_List__c();
        qpl.Qualified_Product_List_Master__c = qplMaster.id;
        qpl.Units_Per_Pack__c = 2;
        qpl.SKU_Incentive__c  = 12.20;
        insert qpl;
        
        Participation_Data__c pD = new Participation_Data__c(Qualified_Product_List__c = qpl.id);
        insert pD;
        
        //insert EA
        Enrollment_Application__c EAObj=new Enrollment_Application__c(Applicant_Email_Address__c='Test@gmail.com',Program__c=probj.id, Participation_Data__c = pD.id, Enrollment_Channel__c = 'Upstream');
        insert EAobj;
        
        dsmtApproved_MLI_Stages__c appCstmSetting = new dsmtApproved_MLI_Stages__c(name='Acquired');
        insert appCstmSetting;
        
        // Insert Measure Line Item Record to fire Trigger
        Measure_Line_Item__c measureItem = new Measure_Line_Item__c(Eligible_Measure__c=ElmObj.id,Enrollment_Application__c=EAObj.id);
        measureItem.Bulb_Fixture__c = '3-Way';
        measureItem.EISA_Exempt__c = 'EISA Exempt';
        measureItem.Start_Date__c =  Date.newInstance(2020,01,01);
        measureItem.Purchase_Date__c = Date.newInstance(2018,01,01);
        measureItem.Rated_Lumen_Output__c = 250;
        measureItem.Incentive_Per_Package__c = 12;
        measureItem.Efficient_Tank_Size_Gallons__c = 250;
        measureItem.Efficient_Energy_Factor__c = 2;
        measureItem.Package_Quantity__c = 2;
        measureItem.Units_Per_Package__c = 1;
        measureItem.Efficient_Lamp_Wattage__c = 0.2;
        measureItem.Sale_Date__c = Date.newInstance(2019,12,01);

        Insert measureItem;
        
        calc_EM_14833 c1 = new calc_EM_14833(measureItem);
        c1.populateValues();    
        
        calc_EM_28194 c28194 = new calc_EM_28194(measureItem);
        c28194.populateValues();    
        
        calc_EM_28193 c28193 = new calc_EM_28193(measureItem);
        c28193.populateValues();    

        List<String> bulbFixList = new List<String>{'3-Way','Globe - Medium Base','Globe - Candelabra Base','BR30','Decorative - Medium Base','R - Diameter ≤ 2.25"','Decorative - Candelabra Base','ER30','R20','R - Diameter > 2.25"'};
        List<Date> dateList = new List<Date> {Date.newInstance(2017,12,01),Date.newInstance(2018,02,01),Date.newInstance(2017,12,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2019,01,01),Date.newInstance(2017,12,01),Date.newInstance(2017,12,01),Date.newInstance(2017,12,01)};
        List< Decimal> ratedLumen = new List<Decimal> {89,149,249,349,499,1049,1599,1999,2549,2999,3000};

        calc_EM_14833 c2;
        for(Decimal r : ratedLumen) {
            
            measureItem.Rated_Lumen_Output__c = r ;
            measureItem.EISA_Exempt__c = 'EISA Exempt';
            for(Integer index = 0;index < bulbFixList.size(); index++) {
                measureItem.Bulb_Fixture__c = bulbFixList[index];
                measureItem.Start_Date__c = dateList[index];
                c2 = new calc_EM_14833(measureItem);
                c2.populateValues();     
            }
                
        }
        
        List< Decimal> ratedLumen1= new List<Decimal> {1049,1489,2600};
        measureItem.EISA_Exempt__c = 'EISA Non-Exempt';
        measureItem.Bulb_Fixture__c = 'Globe - Medium Base';
        for(Decimal r: ratedLumen1){
            measureItem.Rated_Lumen_Output__c = r;
            c2 = new calc_EM_14833(measureItem);
            c2.populateValues();
        }
        
        measureItem.Bulb_Fixture__c = 'Globe - Candelabra Base';
        for(Decimal r: ratedLumen1){
            measureItem.Rated_Lumen_Output__c = r;
            c2 = new calc_EM_14833(measureItem);
            c2.populateValues();
        }
        
        EAobj.Enrollment_Channel__c = 'Online';
        update EAobj;

        
        measureItem.Bulb_Fixture__c = 'Decorative - Candelabra Base';
        measureItem.Rated_Lumen_Output__c = 750;
        calc_EM_14833 c7 = new calc_EM_14833(measureItem);

        c7.populateValues();
    }
     
  
}